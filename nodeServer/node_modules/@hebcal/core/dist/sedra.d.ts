import { HDate } from '@hebcal/hdate';
import './locale';
/** The result from `Sedra.lookup()` */
export type SedraResult = {
    /**
     * Name of the parsha (or parshiyot) read on
     * Hebrew date, e.g. `['Noach']` or `['Matot', 'Masei']`
     */
    parsha: string[];
    /**
     * True if this is a regular parasha HaShavua
     * Torah reading, false if it's a special holiday reading
     */
    chag: boolean;
    /**
     * The parsha number (or numbers) using 1-indexing.
     * A `number` for a regular (single) parsha, and a `number[]`
     * for a doubled parsha.
     * For Parashat *Bereshit*, `num` would be equal to `1`, and for
     * *Matot-Masei* it would be `[42, 43]`
     */
    num?: number | number[];
};
/**
 * Represents Parashah HaShavua for an entire Hebrew year
 */
export declare class Sedra {
    private readonly year;
    private readonly il;
    private readonly firstSaturday;
    private readonly theSedraArray;
    /**
     * Caculates the Parashah HaShavua for an entire Hebrew year
     * @param hyear - Hebrew year (e.g. 5749)
     * @param il - Use Israel sedra schedule (false for Diaspora)
     */
    constructor(hyear: number, il: boolean);
    /**
     * Returns the parsha (or parshiyot) read on Hebrew date
     * @param hd Hebrew date or R.D. days
     */
    get(hd: HDate | number): string[];
    /**
     * Looks up parsha for the date, then returns a translated or transliterated string
     * @param hd Hebrew date or R.D. days
     * @param [locale] Optional locale name (i.e: `'he'`, `'fr'`). Defaults to active locale
     */
    getString(hd: HDate | number, locale?: string): string;
    /**
     * Checks to see if this day would be a regular parasha HaShavua
     * Torah reading or special holiday reading
     * @param hd Hebrew date or R.D. days
     */
    isParsha(hd: HDate | number): boolean;
    /**
     * Returns the date that a parsha occurs
     * or `null` if the parsha doesn't occur this year
     */
    find(parsha: number | string | string[]): HDate | null;
    /**
     * Returns the underlying annual sedra schedule.
     * Used by `@hebcal/triennial`
     */
    getSedraArray(): NumberOrString[];
    /**
     * R.D. date of the first Saturday on or after Rosh Hashana
     */
    getFirstSaturday(): number;
    getYear(): number;
    /**
     * Returns an object describing the parsha on the first Saturday on or after `hd`
     * @param hd Hebrew date or R.D. days
     */
    lookup(hd: HDate | number): SedraResult;
}
/**
 * The 54 parshiyot of the Torah as transilterated strings
 * parshiot[0] == 'Bereshit', parshiot[1] == 'Noach', parshiot[52] == "Ha'azinu".
 * @readonly
 * @type {string[]}
 */
export declare const parshiot: string[];
type NumberOrString = number | string;
/**
 * Convenience function to create an instance of `Sedra` or reuse a previously
 * created and cached instance.
 * @private
 * @param hyear
 * @param il
 */
export declare function getSedra_(hyear: number, il: boolean): Sedra;
export {};
